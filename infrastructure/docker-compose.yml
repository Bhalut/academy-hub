services:
  tracking-service:
    build:
      context: ../services/tracking_service
    ports:
      - "8000:8000"
    env_file:
      - ../services/tracking_service/.env
    depends_on:
      mongodb:
        condition: service_healthy

  mongodb:
    image: mongo:8.0
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017 --quiet
      interval: 10s
      retries: 5
      start_period: 5s

  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    ports:
      - "9092:9092"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana-dashboard.json:/var/lib/grafana/dashboards/tracking-dashboard.json
      - ./grafana-provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana-provisioning/notifiers.yaml:/etc/grafana/provisioning/notifiers/notifiers.yaml

  otel-collector:
    image: otel/opentelemetry-collector
    ports:
      - "4317:4317"
    volumes:
      - ./otel-collector-config.yaml:/etc/otel/config.yaml

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./infrastructure/loki-config.yaml:/etc/loki/loki-config.yaml

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./infrastructure/promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml

  anomaly-detector:
    build: .
    command: [ "python", "ml/detect_anomalies.py" ]
    depends_on:
      - loki

  status:
    build: services/status
    ports:
      - "3001:3000"
    depends_on:
      - tracking-service
      - kafka
      - rabbitmq
      - mongo
      - prometheus

volumes:
  mongo_data:
